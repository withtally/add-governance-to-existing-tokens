/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OldNFTToken,
  OldNFTTokenInterface,
} from "../../contracts/OldNFTToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a27b63227232a2a37b5b2b760a91b6020808301918252835180850190945260048452634f4e544b60e01b9084015281519192916200006191600091620000f0565b50805162000077906001906020840190620000f0565b505050620000946200008e6200009a60201b60201c565b6200009e565b620001d3565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fe9062000196565b90600052602060002090601f0160209004810192826200012257600085556200016d565b82601f106200013d57805160ff19168380011785556200016d565b828001600101855582156200016d579182015b828111156200016d57825182559160200191906001019062000150565b506200017b9291506200017f565b5090565b5b808211156200017b576000815560010162000180565b600181811c90821680620001ab57607f821691505b60208210811415620001cd57634e487b7160e01b600052602260045260246000fd5b50919050565b6117a680620001e36000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd14610251578063e985e9c514610264578063f2fde38b146102a057600080fd5b8063a22cb4651461022b578063b88d4fde1461023e57600080fd5b806370a08231146101e9578063715018a61461020a5780638da5cb5b1461021257806395d89b411461022357600080fd5b806323b872dd116100ee57806323b872dd1461019d57806340d097c3146101b057806342842e0e146101c35780636352211e146101d657600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610188575b600080fd5b61013361012e36600461156e565b6102b3565b60405190151581526020015b60405180910390f35b610150610305565b60405161013f9190611655565b61017061016b3660046115a6565b610397565b6040516001600160a01b03909116815260200161013f565b61019b610196366004611545565b610431565b005b61019b6101ab3660046113fb565b610547565b61019b6101be3660046113af565b6105ce565b61019b6101d13660046113fb565b610651565b6101706101e43660046115a6565b61066c565b6101fc6101f73660046113af565b6106f7565b60405190815260200161013f565b61019b610791565b6006546001600160a01b0316610170565b6101506107f7565b61019b61023936600461150b565b610806565b61019b61024c366004611436565b610811565b61015061025f3660046115a6565b61089f565b6101336102723660046113c9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61019b6102ae3660046113af565b610995565b60006001600160e01b031982166380ac58cd60e01b14806102e457506001600160e01b03198216635b5e139f60e01b145b806102ff57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610314906116d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610340906116d7565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061043c8261066c565b9050806001600160a01b0316836001600160a01b031614156104aa5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161040c565b336001600160a01b03821614806104c657506104c68133610272565b6105385760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161040c565b6105428383610a77565b505050565b6105513382610ae5565b6105c35760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161040c565b610542838383610bdc565b6006546001600160a01b031633146106285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b600061063360075490565b9050610643600780546001019055565b61064d8282610d90565b5050565b61054283838360405180602001604052806000815250610811565b6000818152600260205260408120546001600160a01b0316806102ff5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161040c565b60006001600160a01b0382166107755760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161040c565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146107eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b6107f56000610daa565b565b606060018054610314906116d7565b61064d338383610dfc565b61081b3383610ae5565b61088d5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161040c565b61089984848484610ecb565b50505050565b6000818152600260205260409020546060906001600160a01b031661092c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161040c565b600061094360408051602081019091526000815290565b90506000815111610963576040518060200160405280600081525061098e565b8061096d84610f49565b60405160200161097e9291906115ea565b6040516020818303038152906040525b9392505050565b6006546001600160a01b031633146109ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b6001600160a01b038116610a6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161040c565b610a7481610daa565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610aac8261066c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610b5e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161040c565b6000610b698361066c565b9050806001600160a01b0316846001600160a01b03161480610bb057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610bd45750836001600160a01b0316610bc984610397565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bef8261066c565b6001600160a01b031614610c6b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161040c565b6001600160a01b038216610ccd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040c565b610cd8600082610a77565b6001600160a01b0383166000908152600360205260408120805460019290610d01908490611694565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d2f908490611668565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61064d82826040518060200160405280600081525061107b565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610e5e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ed6848484610bdc565b610ee2848484846110f9565b6108995760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161040c565b606081610f6d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f975780610f8181611712565b9150610f909050600a83611680565b9150610f71565b60008167ffffffffffffffff811115610fc057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610fea576020820181803683370190505b5090505b8415610bd457610fff600183611694565b915061100c600a8661172d565b611017906030611668565b60f81b81838151811061103a57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611074600a86611680565b9450610fee565b6110858383611251565b61109260008484846110f9565b6105425760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161040c565b60006001600160a01b0384163b1561124657604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061113d903390899088908890600401611619565b602060405180830381600087803b15801561115757600080fd5b505af1925050508015611187575060408051601f3d908101601f191682019092526111849181019061158a565b60015b61122c573d8080156111b5576040519150601f19603f3d011682016040523d82523d6000602084013e6111ba565b606091505b5080516112245760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161040c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bd4565b506001949350505050565b6001600160a01b0382166112a75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040c565b6000818152600260205260409020546001600160a01b03161561130c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040c565b6001600160a01b0382166000908152600360205260408120805460019290611335908490611668565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b03811681146113aa57600080fd5b919050565b6000602082840312156113c0578081fd5b61098e82611393565b600080604083850312156113db578081fd5b6113e483611393565b91506113f260208401611393565b90509250929050565b60008060006060848603121561140f578081fd5b61141884611393565b925061142660208501611393565b9150604084013590509250925092565b6000806000806080858703121561144b578081fd5b61145485611393565b935061146260208601611393565b925060408501359150606085013567ffffffffffffffff80821115611485578283fd5b818701915087601f830112611498578283fd5b8135818111156114aa576114aa61176d565b604051601f8201601f19908116603f011681019083821181831017156114d2576114d261176d565b816040528281528a60208487010111156114ea578586fd5b82602086016020830137918201602001949094529598949750929550505050565b6000806040838503121561151d578182fd5b61152683611393565b91506020830135801515811461153a578182fd5b809150509250929050565b60008060408385031215611557578182fd5b61156083611393565b946020939093013593505050565b60006020828403121561157f578081fd5b813561098e81611783565b60006020828403121561159b578081fd5b815161098e81611783565b6000602082840312156115b7578081fd5b5035919050565b600081518084526115d68160208601602086016116ab565b601f01601f19169290920160200192915050565b600083516115fc8184602088016116ab565b8351908301906116108183602088016116ab565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261164b60808301846115be565b9695505050505050565b60208152600061098e60208301846115be565b6000821982111561167b5761167b611741565b500190565b60008261168f5761168f611757565b500490565b6000828210156116a6576116a6611741565b500390565b60005b838110156116c65781810151838201526020016116ae565b838111156108995750506000910152565b600181811c908216806116eb57607f821691505b6020821081141561170c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561172657611726611741565b5060010190565b60008261173c5761173c611757565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a7457600080fdfea164736f6c6343000804000a";

type OldNFTTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OldNFTTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OldNFTToken__factory extends ContractFactory {
  constructor(...args: OldNFTTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OldNFTToken> {
    return super.deploy(overrides || {}) as Promise<OldNFTToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OldNFTToken {
    return super.attach(address) as OldNFTToken;
  }
  override connect(signer: Signer): OldNFTToken__factory {
    return super.connect(signer) as OldNFTToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OldNFTTokenInterface {
    return new utils.Interface(_abi) as OldNFTTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OldNFTToken {
    return new Contract(address, _abi, signerOrProvider) as OldNFTToken;
  }
}
